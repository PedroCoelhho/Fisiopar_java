package view.telas;

import control.FuncionarioC;
import control.PacienteC;
import java.awt.Color;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import model.Funcionario;
import util.Yagami;
import view.popups.FindEndereco;

/**
 * @author seitiiyda
 * @author zampiroli - code
 */
public class CadFuncionario extends javax.swing.JInternalFrame {

    // Variável para o contador
    protected Timer timer = new Timer();

    // Array para armazenar o Text Fields
    protected JTextField[] textFields;

    // Instância do popup da janela de endereços
    protected FindEndereco fe = new FindEndereco(null, true);
    
    //
    boolean cpfReturn;

    /**
     * Creates new form CadFuncionario
     */
    public CadFuncionario() {
        initComponents();
        setLocation(100, 100);
        // Requisita focos no txtNome
        txtNome.requestFocus();

        // Chama método para preencher array dos Text Fields
        loadTextFields();

        // Loop que atualzia a cada 50 milisegundos
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                // Método para verificar preenchimento dos Text Fields
                verify();

                // Garantir que o texto do campo endereço esteja correto
                txtEndereco.setText(String.valueOf(fe.idEndereco));
            }
        }, 0, 50);
    }

    /**
     * Método para preencher array com os Text Fields
     */
    private void loadTextFields() {
        textFields = new JTextField[]{
            txtNome,
            txtCpf,
            txtRg,
            txtTel1,
            txtTel2,
            txtEmail,
            txtEndereco,
            txtDatanas,
            txtCargo,
            txtDataAdm,
            txtNomeMae,
            txtNomeResp,
            txtSetor
        };
    }

    /**
     * Método para verificar preenchimento dos Text Fields
     */
    private void verify() {
        // N° de campos preenchidos
        int completes = 0;

        // Para cada Text Field que não esteja vazio, contar +1 complete
        for (JTextField tf : textFields) {
            if (!"".equals(tf.getText())) {
                completes++;
            }
        }

        // Se todos os campos estiverem preenchidos, liberar botão
        if ((comboEtnia.getSelectedIndex() != 0)
                && (comboEstCivil.getSelectedIndex() != 0)
                && (comboGenero.getSelectedIndex() != 0)) {
            if (completes == textFields.length) {
                btnCadastrar.setEnabled(true);
            } else {
                btnCadastrar.setEnabled(false);
            }
        } else {
            btnCadastrar.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblDatanas = new javax.swing.JLabel();
        lblGenero = new javax.swing.JLabel();
        comboGenero = new javax.swing.JComboBox<String>();
        lblCpf = new javax.swing.JLabel();
        lblRg = new javax.swing.JLabel();
        txtRg = new javax.swing.JTextField();
        lblEstCivil = new javax.swing.JLabel();
        comboEstCivil = new javax.swing.JComboBox<String>();
        lblEtinia = new javax.swing.JLabel();
        lblNomeResp = new javax.swing.JLabel();
        txtNomeResp = new javax.swing.JTextField();
        lblNomeMae = new javax.swing.JLabel();
        txtNomeMae = new javax.swing.JTextField();
        lblTel1 = new javax.swing.JLabel();
        txtTel1 = new javax.swing.JTextField();
        lblTel2 = new javax.swing.JLabel();
        txtTel2 = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblEndereco = new javax.swing.JLabel();
        lblCargo = new javax.swing.JLabel();
        txtCargo = new javax.swing.JTextField();
        lblSetor = new javax.swing.JLabel();
        txtSetor = new javax.swing.JTextField();
        lblDataAdm = new javax.swing.JLabel();
        btnLimpar = new javax.swing.JButton();
        jSeparator = new javax.swing.JSeparator();
        comboEtnia = new javax.swing.JComboBox<String>();
        btnCadastrar = new javax.swing.JButton();
        txtDatanas = new javax.swing.JFormattedTextField();
        txtDataAdm = new javax.swing.JFormattedTextField();
        txtEndereco = new javax.swing.JTextField();
        txtCpf = new javax.swing.JFormattedTextField();

        setClosable(true);
        setTitle("CADFUN");
        setToolTipText("Cadastra Funcionarios");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconPacientes.png"))); // NOI18N
        setName("FUN00X"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("CADASTRO DE FUNCIONARIO");

        lblNome.setText("Nome:");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        lblDatanas.setText("Data Nascimento:");

        lblGenero.setText("Gênero:");

        comboGenero.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--------------------", "Masculino", "Feminino" }));

        lblCpf.setText("CPF:");

        lblRg.setText("RG:");

        txtRg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRgActionPerformed(evt);
            }
        });

        lblEstCivil.setText("Estado Civil:");

        comboEstCivil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--------------------", "Solteiro(a)", "Casado(a)", "Viuvo(a)", "Divorciado(a)", "Separado(a)" }));

        lblEtinia.setText("Etnia:");

        lblNomeResp.setText("Nome do Resp.");

        lblNomeMae.setText("Nome da mae:");

        lblTel1.setText("Telef.");

        lblTel2.setText("Telef.");

        lblEmail.setText("E-mail:");

        lblEndereco.setText("Ender.");

        lblCargo.setText("Cargo:");

        lblSetor.setText("Setor:");

        lblDataAdm.setText("Data ADM:");

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        comboEtnia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "------------------", "Branca", "Preta", "Amarela", "Parda", "Indigena" }));
        comboEtnia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEtniaActionPerformed(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        try {
            txtDatanas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDatanas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDatanasFocusLost(evt);
            }
        });

        try {
            txtDataAdm.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataAdm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataAdmFocusLost(evt);
            }
        });

        txtEndereco.setBackground(new java.awt.Color(204, 204, 255));
        txtEndereco.setName(""); // NOI18N
        txtEndereco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEnderecoFocusGained(evt);
            }
        });
        txtEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnderecoActionPerformed(evt);
            }
        });

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCpfFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimpar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblEndereco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEtinia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCpf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .addComponent(txtTel1)
                            .addComponent(comboEtnia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtEndereco)
                            .addComponent(txtCpf))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDatanas, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1)
                                        .addComponent(txtDatanas, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblRg, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRg)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboGenero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblEstCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboEstCivil, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(lblTitulo)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblDataAdm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblCargo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblNomeResp, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNomeResp)
                                    .addComponent(txtTel2)
                                    .addComponent(txtCargo)
                                    .addComponent(txtDataAdm, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSetor))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblNomeMae)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNomeMae))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEmail))))))
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNome)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDatanas))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDatanas)
                        .addComponent(lblGenero)
                        .addComponent(comboGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRg)
                    .addComponent(txtRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstCivil)
                    .addComponent(comboEstCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCpf)
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeResp)
                    .addComponent(txtNomeResp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNomeMae)
                    .addComponent(txtNomeMae, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEtinia)
                    .addComponent(comboEtnia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTel1)
                        .addComponent(txtTel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTel2)
                        .addComponent(txtTel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblEmail)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCargo)
                        .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSetor)
                        .addComponent(txtSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblEndereco)
                    .addComponent(txtEndereco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataAdm)
                    .addComponent(txtDataAdm))
                .addGap(22, 22, 22)
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtRgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRgActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLimparActionPerformed

    private void comboEtniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEtniaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboEtniaActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        //** Realiza a inserção de dados na database; */
        try {
            //** Instanciando a classe de fisioterapeuta;
            Funcionario func = new Funcionario();

            //** Setando os atributos do objeto func;
            func.setCargo(txtCargo.getText());
            func.setCpf(txtCpf.getText().replaceAll("[^a-zA-Z0-9]", ""));
            func.setData_adm(Yagami.stringToDate(txtDataAdm.getText()));
            func.setData_nasc(Yagami.stringToDate(txtDatanas.getText()));
            func.setEmail(txtEmail.getText());
            func.setEtnia((String) comboEtnia.getSelectedItem());
            func.setEst_civ((String) comboEstCivil.getSelectedItem());
            func.setFk_endereco(Integer.parseInt(txtEndereco.getText()));
            func.setNome(txtNome.getText());
            func.setNome_mae(txtNomeMae.getText());
            func.setNome_resp(txtNomeResp.getText());
            func.setRg(txtRg.getText());
            func.setSetor(txtSetor.getText());
            func.setSexo((String) comboGenero.getSelectedItem());
            func.setTel_prim(txtTel1.getText());
            func.setTel_sec(txtTel2.getText());

            // Caso consiga cadastrar, limpa todos os campos e volta o foco para
            // o primeiro Text Field
            if (FuncionarioC.CONTROL.create(func)) {
                comboEstCivil.setSelectedIndex(0);
                comboEtnia.setSelectedIndex(0);
                comboGenero.setSelectedIndex(0);
                for (JTextField tf : textFields) {
                    if (!"".equals(tf.getText())) {
                        tf.setText("");
                    }
                }
                txtNome.requestFocus();
            }
        } catch (NumberFormatException | ParseException e) {
            //Exibe mensagem de erro e a exeption;
            Yagami.mensagemErro(e);
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed
    /**
     * Método chamado ao tentar fechar a janela
     */
    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // Dialogo de confirmação
        int reply = JOptionPane.showConfirmDialog(
                null,
                "Tem certeza que deseja sair do cadastro de funcionário?",
                "Cancelar Cadastro",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
        );

        // Se confirmar o dialogo, fecha
        if (reply == JOptionPane.YES_OPTION) {
            this.dispose();
        } else {
            this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void txtEnderecoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEnderecoFocusGained
        // Requisita o foco no campo do Convenio
        txtCargo.requestFocus();

        // Mostra popup de endereços
        fe.setVisible(true);

        // Pega a ID do endereço selecionado no popup
        txtEndereco.setText(String.valueOf(fe.idEndereco));

        // Requisita o foco no campo do Convenio novamente (Garantia)
        txtCargo.requestFocus();
    }//GEN-LAST:event_txtEnderecoFocusGained

    private void txtEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnderecoActionPerformed

    private void txtCpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCpfFocusLost
        // TODO add your handling code here:
        String Cpf = txtCpf.getText().replaceAll("[^a-zA-Z0-9]", "");
        //Verificando se o campo esta preenchido        
        if (Cpf.length() > 0) {
            // usando o metodo isCPF() 
            if (Yagami.isCPF(Cpf) == true) {
                txtCpf.setBackground(Color.WHITE);
                cpfReturn = false;
            } else {
                cpfReturn = true;
                txtCpf.setBackground(Color.red);
            }
            //Verificando se ja existe Cpf cadastrado            
            try {
                if (FuncionarioC.CONTROL.search(Cpf) == true) {
                    txtCpf.setText(null);
                }
            } catch (SQLException ex) {
                Logger.getLogger(CadPaciente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtCpfFocusLost

    private void txtDatanasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDatanasFocusLost
        // TODO add your handling code here:
        String DataNas = txtDatanas.getText();
        
        if (Yagami.dataMenorQueHoje(DataNas) == true) {
            txtDatanas.setBackground(Color.WHITE);

        } else {
            JOptionPane.showMessageDialog(null, "Data de Nascimento Inválida", "Mensage Error", JOptionPane.ERROR_MESSAGE);
            txtDatanas.setBackground(Color.red);

        }
    }//GEN-LAST:event_txtDatanasFocusLost

    private void txtDataAdmFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataAdmFocusLost
        // TODO add your handling code here:
        String Valid = txtDataAdm.getText();
        
        if (Yagami.data(Valid) == true) {
            txtDataAdm.setBackground(Color.WHITE);

        } else {
            txtDataAdm.setBackground(Color.red);
        }
    }//GEN-LAST:event_txtDataAdmFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JComboBox<String> comboEstCivil;
    private javax.swing.JComboBox<String> comboEtnia;
    private javax.swing.JComboBox<String> comboGenero;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblDataAdm;
    private javax.swing.JLabel lblDatanas;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblEstCivil;
    private javax.swing.JLabel lblEtinia;
    private javax.swing.JLabel lblGenero;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNomeMae;
    private javax.swing.JLabel lblNomeResp;
    private javax.swing.JLabel lblRg;
    private javax.swing.JLabel lblSetor;
    private javax.swing.JLabel lblTel1;
    private javax.swing.JLabel lblTel2;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField txtCargo;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JFormattedTextField txtDataAdm;
    private javax.swing.JFormattedTextField txtDatanas;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNomeMae;
    private javax.swing.JTextField txtNomeResp;
    private javax.swing.JTextField txtRg;
    private javax.swing.JTextField txtSetor;
    private javax.swing.JTextField txtTel1;
    private javax.swing.JTextField txtTel2;
    // End of variables declaration//GEN-END:variables
}

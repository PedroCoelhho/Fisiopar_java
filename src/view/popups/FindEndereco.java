package view.popups;

import control.EnderecoC;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import util.Yagami;

/**
 * Tela para buscar endereços
 * @author Juan Galvão
 */
public class FindEndereco extends javax.swing.JDialog {
    // Variável para armazenar ID do endereço escolhido
    public int idEndereco;
    
    /**
     * Cria novo JDialog FindEndereco
     * @param parent - Define a "Janela pai" do JDialog
     * @param modal  - Define se ela será modal da janela pai
     */
    public FindEndereco(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        
        // Método para redimensionalmento das colunas da tabela
        Yagami.resizeColumns2(tableEnderecos, 833, 3,12,20,24,7,17,17);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        tableEnderecos = new javax.swing.JTable();
        btnPesquisar = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        txtPesquisar = new javax.swing.JFormattedTextField();
        btnNovo = new javax.swing.JButton();
        lblCep = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        menuOperacoes = new javax.swing.JMenu();
        menuOk = new javax.swing.JMenuItem();
        menuPesquisar = new javax.swing.JMenuItem();
        menuNovo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Endereços");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tableEnderecos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CEP", "Cidade", "Logradouro", "Número", "Bairro", "Complemento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane.setViewportView(tableEnderecos);

        btnPesquisar.setText("Pesquisar (F2)");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnOk.setText("OK (F3)");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        try {
            txtPesquisar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        btnNovo.setText("Novo (F1)");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        lblCep.setText("CEP:");

        menuOperacoes.setText("Operações");

        menuOk.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        menuOk.setText("OK");
        menuOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOkActionPerformed(evt);
            }
        });
        menuOperacoes.add(menuOk);

        menuPesquisar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        menuPesquisar.setText("Pesquisar");
        menuPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPesquisarActionPerformed(evt);
            }
        });
        menuOperacoes.add(menuPesquisar);

        menuNovo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        menuNovo.setText("Novo");
        menuNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNovoActionPerformed(evt);
            }
        });
        menuOperacoes.add(menuNovo);

        menuBar.add(menuOperacoes);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 833, Short.MAX_VALUE)
                    .addComponent(btnOk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNovo))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisar)
                        .addComponent(lblCep)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        try {
            // Armazenar index da linha selecionada
            int linhaAtual = tableEnderecos.getSelectedRow();
            
            // Pegar valor do objeto da coluna 0 da linha selecionada to String
            String t = String.valueOf(tableEnderecos.getValueAt(linhaAtual, 0));
            
            // Passar esse valor para int e armazenar na variável da ID
            idEndereco = Integer.parseInt(t);
            
            // Fechar janela
            this.dispose();
            
        } catch (ArrayIndexOutOfBoundsException e) {
            // Alertar que deve selecionar uma linha caso não selecione.
            JOptionPane.showMessageDialog(
                    null, 
                    "Você deve escolher um endereço.", 
                    "Erro", 
                    JOptionPane.ERROR_MESSAGE
            );
        }     
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        try {
            // Preencher tabela de acordo com o texto digitado
            if("        ".equals(txtPesquisar.getText())) {
                // Listar tabela com todos os valores da tabela endereco
                EnderecoC.CONTROL.listTable(tableEnderecos, false);
            } else {
                // Armazenar texto digitado
                int cepValor = Integer.parseInt(txtPesquisar.getText());
                
                // Listar tabela buscando encontrar o CEP digitado
                EnderecoC.CONTROL.listTable(tableEnderecos, true, cepValor);
                
                // Se encontrar algum valor...
                if(tableEnderecos.getRowCount() > 0) {
                    // Selecionar a primeira linha
                    tableEnderecos.setRowSelectionInterval(0, 0);
                    
                    // Requistar foco no botão OK
                    btnOk.requestFocus();
                }
            }
        } catch (NumberFormatException e) {
            // Ignorar exceções de NumberFormat
            System.out.println("No excpetions today!");
        }       
    }//GEN-LAST:event_btnPesquisarActionPerformed

    /** Método chamado ao soltar tecla pressionada no txtPesquisar */
    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        java.awt.event.ActionEvent evt2 = null;
        // Pega o número de caracteres digitado no txtPesquisar
        int numLetters = txtPesquisar.getText().length();
        if(numLetters > 7) {
            // Se for maior que 7, disparar evento do botão de pesquisar
            btnPesquisarActionPerformed(evt2);
        }
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // Impedir que a janela seja fechada
        this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    private void menuOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOkActionPerformed
        // Disparar evento do botão de OK caso aperte F3 ou o item OK
        java.awt.event.ActionEvent evt2 = null;
        btnOkActionPerformed(evt2);
    }//GEN-LAST:event_menuOkActionPerformed

    private void menuNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNovoActionPerformed
        // Disparar evento do botão de Novo caso aperte F1 ou o item Novo
        java.awt.event.ActionEvent evt2 = null;
        btnNovoActionPerformed(evt2);
    }//GEN-LAST:event_menuNovoActionPerformed

    private void menuPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPesquisarActionPerformed
        // Chama evento do botão de Pesquisar caso aperte F2 ou o item pesquisar
        java.awt.event.ActionEvent evt2 = null;
        btnPesquisarActionPerformed(evt2);
    }//GEN-LAST:event_menuPesquisarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // Chama janela de Cadastro de Endereços
        new CadEndereco(null, true).setVisible(true);
    }//GEN-LAST:event_btnNovoActionPerformed

    /**
     * Método Main da classe
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Look and Feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FindEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FindEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FindEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FindEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Cria e dispara o JDialog */
        java.awt.EventQueue.invokeLater(() -> {
            FindEndereco dialog = new FindEndereco(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel lblCep;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuNovo;
    private javax.swing.JMenuItem menuOk;
    private javax.swing.JMenu menuOperacoes;
    private javax.swing.JMenuItem menuPesquisar;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tableEnderecos;
    private javax.swing.JFormattedTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables
}
